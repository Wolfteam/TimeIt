<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="TimeIt.Pages.TimerPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behaviors="clr-namespace:Xamarin.Forms.BehaviorsPack;assembly=Xamarin.Forms.BehaviorsPack"
    xmlns:c="clr-namespace:TimeIt.Controls"
    xmlns:converters="clr-namespace:TimeIt.Converters"
    xmlns:localModels="clr-namespace:TimeIt.Models"
    xmlns:uc="clr-namespace:TimeIt.UserControls"
    x:Name="timerPage"
    Title="{Binding PageTitle, Mode=OneWay}"
    BindingContext="{Binding EditTimer, Source={StaticResource Locator}}"
    NavigationPage.BackButtonTitle="Go back hdp"
    Style="{StaticResource PageStyle}">
    <ContentPage.ToolbarItems>
        <c:BindableToolbarItem
            Command="{Binding SaveTimerCommand}"
            Order="Primary"
            Priority="0"
            Text="Save">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="{StaticResource FontAwesomeSolid}"
                    Glyph="{x:Static localModels:FontAwesome5SolidIcons.Save}"
                    Size="{StaticResource FontAwesomeIconSize}"
                    Color="White" />
            </ToolbarItem.IconImageSource>
        </c:BindableToolbarItem>

        <c:BindableToolbarItem
            Command="{Binding DiscardChangesCommand}"
            Order="Primary"
            Priority="1"
            Text="Discard">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="{StaticResource FontAwesomeSolid}"
                    Glyph="{x:Static localModels:FontAwesome5SolidIcons.Times}"
                    Size="{StaticResource FontAwesomeIconSize}"
                    Color="White" />
            </ToolbarItem.IconImageSource>
        </c:BindableToolbarItem>

        <c:BindableToolbarItem
            Command="{Binding RemoveTimerCommand}"
            Order="Secondary"
            Priority="2"
            Text="Delete">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="{StaticResource FontAwesomeSolid}"
                    Glyph="{x:Static localModels:FontAwesome5SolidIcons.TrashAlt}"
                    Color="White" />
            </ToolbarItem.IconImageSource>
        </c:BindableToolbarItem>
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>
        <converters:StringToColorConverter x:Key="StringToColorConverter" />

        <!--  Portrait  -->
        <RowDefinitionCollection x:Key="DefaultRowsInPortrait" x:Name="DefaultRowsInPortrait">
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </RowDefinitionCollection>
        <ColumnDefinitionCollection x:Key="DefaultColumnsInPortrait" x:Name="DefaultColumnsInPortrait">
            <ColumnDefinition Width="*" />
        </ColumnDefinitionCollection>

        <!--  Landscape  -->
        <RowDefinitionCollection x:Key="DefaultRowsInLandscape" x:Name="DefaultRowsInLandscape">
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </RowDefinitionCollection>
        <ColumnDefinitionCollection x:Key="DefaultColumnsInLandscape" x:Name="DefaultColumnsInLandscape">
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </ColumnDefinitionCollection>

        <Style x:Key="MainGridStyle" TargetType="Grid">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Portrait">
                            <VisualState.Setters>
                                <Setter Property="Margin" Value="{x:OnPlatform Android=20, Default='20,0,20,20'}" />
                                <Setter Property="RowDefinitions" Value="{x:StaticResource DefaultRowsInPortrait}" />
                                <Setter Property="ColumnDefinitions" Value="{x:StaticResource DefaultColumnsInPortrait}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Landscape">
                            <VisualState.Setters>
                                <Setter Property="Margin" Value="20" />
                                <Setter Property="RowDefinitions" Value="{x:StaticResource DefaultRowsInLandscape}" />
                                <Setter Property="ColumnDefinitions" Value="{x:StaticResource DefaultColumnsInLandscape}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="NameAndRepetitionsStyle" TargetType="Grid">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Portrait">
                            <VisualState.Setters>
                                <Setter Property="Grid.Row" Value="0" />
                                <Setter Property="Grid.RowSpan" Value="1" />
                                <Setter Property="Grid.Column" Value="0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Landscape">
                            <VisualState.Setters>
                                <Setter Property="Grid.Row" Value="0" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="Grid.Column" Value="0" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="ListViewGridStyle" TargetType="Grid">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Portrait">
                            <VisualState.Setters>
                                <Setter Property="Grid.Row" Value="1" />
                                <Setter Property="Grid.RowSpan" Value="1" />
                                <Setter Property="Grid.Column" Value="0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Landscape">
                            <VisualState.Setters>
                                <Setter Property="Grid.Row" Value="0" />
                                <Setter Property="Grid.RowSpan" Value="2" />
                                <Setter Property="Grid.Column" Value="1" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="IntervalTotalTimeStackLayoutStyle" TargetType="StackLayout">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="VerticalOptions" Value="End" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Portrait">
                            <VisualState.Setters>
                                <Setter Property="Grid.Row" Value="2" />
                                <Setter Property="Grid.Column" Value="0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Landscape">
                            <VisualState.Setters>
                                <Setter Property="Grid.Row" Value="2" />
                                <Setter Property="Grid.Column" Value="0" />
                                <Setter Property="Grid.ColumnSpan" Value="2" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentPage.Resources>

    <Grid x:Name="MainGrid" Style="{x:StaticResource MainGridStyle}">
        <Grid x:Name="NameAndRepetitionGrid" Style="{x:StaticResource NameAndRepetitionsStyle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackLayout VerticalOptions="Center">
                <Label
                    FontAttributes="Bold"
                    FontSize="{OnPlatform Android='18',
                                          UWP='14'}"
                    Text="Name"
                    TextColor="White"
                    VerticalOptions="Center" />
                <Entry
                    Placeholder="Timer name"
                    Text="{Binding TimerName, Mode=TwoWay}"
                    TextColor="{x:OnPlatform Android=White}" />
            </StackLayout>
            <StackLayout Grid.Row="1" VerticalOptions="Center">
                <Label
                    FontAttributes="Bold"
                    FontSize="{OnPlatform Android='18',
                                          UWP='14'}"
                    Text="Repetitions"
                    TextColor="White" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Slider
                        Grid.Column="0"
                        Maximum="99"
                        Minimum="1"
                        VerticalOptions="Center"
                        Value="{Binding Repetitions, Mode=TwoWay}" />
                    <Label
                        Grid.Column="1"
                        FontAttributes="Bold"
                        FontSize="{OnPlatform Android='22',
                                              UWP='18'}"
                        HorizontalOptions="Center"
                        Text="{Binding Repetitions, Mode=TwoWay}"
                        TextColor="White"
                        VerticalTextAlignment="Center" />
                </Grid>
            </StackLayout>
        </Grid>
        <Grid x:Name="ListViewStackLayout" Style="{x:StaticResource ListViewGridStyle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <uc:LineControl LineHeight="2" />
            <Grid Grid.Row="1" HorizontalOptions="FillAndExpand">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Label
                    Grid.Column="0"
                    FontAttributes="Bold"
                    FontSize="{OnPlatform Android='18',
                                          UWP='14'}"
                    HorizontalOptions="Start"
                    Text="Intervals:"
                    TextColor="White"
                    VerticalOptions="Center" />
                <Button
                    Grid.Column="1"
                    BackgroundColor="Transparent"
                    Command="{Binding AddIntervalCommand}"
                    FontSize="14"
                    Text="Add a new interval"
                    TextColor="White"
                    VerticalOptions="Center">
                    <Button.ImageSource>
                        <FontImageSource
                            FontFamily="{StaticResource FontAwesomeSolid}"
                            Glyph="{x:Static localModels:FontAwesome5SolidIcons.PlusCircle}"
                            Color="White" />
                    </Button.ImageSource>
                </Button>
            </Grid>
            <c:IntervalListView
                x:Name="IntervalsListView"
                Grid.Row="2"
                ItemsSource="{Binding Intervals, Mode=OneWay}"
                RowHeight="60"
                SelectionMode="None"
                SeparatorColor="White">
                <ListView.Behaviors>
                    <behaviors:EventToCommandBehavior
                        Command="{Binding EditIntervalCommand}"
                        EventArgsPropertyPath="Item"
                        EventName="ItemTapped" />
                </ListView.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Grid
                                Margin="0,0,0,10"
                                Padding="{OnPlatform UWP='10',
                                                     Default='0'}"
                                HorizontalOptions="FillAndExpand">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    FontAttributes="Bold"
                                    HorizontalOptions="StartAndExpand"
                                    HorizontalTextAlignment="Start"
                                    LineBreakMode="TailTruncation"
                                    Text="{Binding Name, Mode=OneWay}"
                                    TextColor="{Binding Color, Mode=OneWay, Converter={StaticResource StringToColorConverter}}"
                                    VerticalOptions="End" />
                                <Button
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Margin="{x:OnPlatform Android='0,10,0,0'}"
                                    BackgroundColor="Transparent"
                                    Command="{Binding Path=BindingContext.RemoveIntervalCommand, Source={x:Reference timerPage}}"
                                    CommandParameter="{Binding}"
                                    HorizontalOptions="End"
                                    VerticalOptions="Center">
                                    <Button.ImageSource>
                                        <FontImageSource
                                            FontFamily="{StaticResource FontAwesomeSolid}"
                                            Glyph="{x:Static localModels:FontAwesome5SolidIcons.TrashAlt}"
                                            Color="Red" />
                                    </Button.ImageSource>
                                </Button>
                                <Label
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="10,0,0,0"
                                    HorizontalOptions="StartAndExpand"
                                    HorizontalTextAlignment="Start"
                                    Text="{Binding DurationString, Mode=OneWay}"
                                    TextColor="White"
                                    VerticalOptions="Start" />
                            </Grid>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </c:IntervalListView>
        </Grid>
        <StackLayout x:Name="IntervalTotalTimeStackLayout" Style="{x:StaticResource IntervalTotalTimeStackLayoutStyle}">
            <uc:LineControl LineHeight="2" />
            <StackLayout HorizontalOptions="Fill" Orientation="Vertical">
                <Label
                    FontSize="{OnPlatform Android='22',
                                          UWP='18'}"
                    HorizontalOptions="EndAndExpand"
                    Text="{Binding IntervalToTalTime, Mode=OneWay}"
                    TextColor="White" />
            </StackLayout>
        </StackLayout>
    </Grid>
</ContentPage>